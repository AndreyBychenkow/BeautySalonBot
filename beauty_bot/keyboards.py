from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from bot.models import Specialist, Procedure
from funcs import is_free_time
import datetime
from datetime import time



def get_main_menu_keyboard():
    keyboard = [
        [InlineKeyboardButton("üìù  –ó–∞–ø–∏—Å–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Å–∞–ª–æ–Ω  ", callback_data="salon")],
        [InlineKeyboardButton("üñäÔ∏è  –ó–∞–ø–∏—Å–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –º–∞—Å—Ç–µ—Ä–∞", callback_data="master")],
        [InlineKeyboardButton("üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", callback_data="call_admin")],

    ]
    return InlineKeyboardMarkup(keyboard)


def get_master_keyboard():
    masters = Specialist.objects.all()
    keyboard = []
    for master in masters:
        keyboard.append([InlineKeyboardButton(f"‚Äçüë©‚Äç{master.name} ", callback_data=f"master_{master.id}")])
    return InlineKeyboardMarkup(keyboard)


def get_date_keyboard():
    keyboard = []
    today = datetime.datetime.now()
    end_date = today + datetime.timedelta(days=4)
    dates = [today + datetime.timedelta(days=x) for x in range((end_date - today).days + 1)]

    for date in dates:
        formatted_date = date.strftime('%Y-%m-%d')  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ callback_data
        keyboard.append([
            InlineKeyboardButton(
                text=date.strftime('%d-%m-%Y'),  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è –¥–∞—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                callback_data=f"date_{formatted_date}"  # –ü–µ—Ä–µ–¥–∞—ë–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é –¥–∞—Ç—É –≤ callback_data
            )
        ])
    return InlineKeyboardMarkup(keyboard)


def get_salon_keyboard():
    keyboard = [
        [InlineKeyboardButton("‚Äçüè† –°–∞–ª–æ–Ω '–ß–µ–ª–∫–∞' ", callback_data="salon_1"),
         InlineKeyboardButton("üè† –°–∞–ª–æ–Ω '–°—Ç–∏–ª—è–≥–∞' ", callback_data="salon_2"),
         InlineKeyboardButton("üè† –°–∞–ª–æ–Ω '–ì–∞—Ä–º–æ–Ω–∏—è' ", callback_data="salon_3")],
        [InlineKeyboardButton("üè† –°–∞–ª–æ–Ω '–≠–ª–µ–≥–∞–Ω—Å' ", callback_data="salon_4"),
         InlineKeyboardButton("üè† –°–∞–ª–æ–Ω '–ö—Ä–∞—Å–∞' ", callback_data="salon_5"),
         InlineKeyboardButton("üè† –°–∞–ª–æ–Ω '–°—Ç–∏–ª—å' ", callback_data="salon_6")]

    ]
    return InlineKeyboardMarkup(keyboard)


def get_procedure_keyboard():
    keyboard = []
    procedures = Procedure.objects.all()
    for procedure in procedures:
        keyboard.append([InlineKeyboardButton(f"{procedure.name} ", callback_data=f"procedure_{procedure.id}")])
    return InlineKeyboardMarkup(keyboard)


def get_time_slots_keyboard(chat_id):
    from handlers import USER_DATA
    try:
        # –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        specialist_id = USER_DATA[chat_id].get('master', [])[-1]
        specialist = Specialist.objects.get(id=specialist_id)

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ—ë –≤ –æ–±—ä–µ–∫—Ç date
        raw_date = USER_DATA[chat_id].get('date')
        if not raw_date:
            print(f"–û—à–∏–±–∫–∞: –¥–∞—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ USER_DATA –¥–ª—è chat_id {chat_id}")
            return InlineKeyboardMarkup([])

        date = datetime.datetime.strptime(raw_date, "%Y-%m-%d").date()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        is_available = is_free_time(specialist, date)
        print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è {specialist.name} –Ω–∞ {date}: {is_available}")

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
        keyboard = []
        for time_interval, available in is_available.items():
            if available:
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º time_interval –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ HH:MM
                time_str = time_interval.strftime("%H:%M")
                callback_data = f"time_{raw_date}_{time_str}"  # –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
                keyboard.append([
                    InlineKeyboardButton(
                        text=f"{time_str}",
                        callback_data=callback_data
                    )
                ])

        if not keyboard:
            print("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤.")
            return InlineKeyboardMarkup([])

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        return InlineKeyboardMarkup(keyboard)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ get_time_slots_keyboard: {e}")
        return InlineKeyboardMarkup([])


def get_confirm_keyboard():
    keyboard = [
        [InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="confirm_booking")]
    ]
    return InlineKeyboardMarkup(keyboard)
